% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dualPathSVD2_YC.R
\name{dualpathSvd2_YC}
\alias{dualpathSvd2_YC}
\title{Adapted from https://github.com/sangwon-hyun/genlassoinf/blob/master/code/dualPathSvd2.R,
modified to compute the polyhedron post-selection inference selection with faster
computation of svd, and fixed a few bugs in the previous function (as of feb/5/2021).
This code first compute a solution path of the generalized lasso dual problem:}
\usage{
dualpathSvd2_YC(
  y,
  D,
  v,
  sigma = 1,
  approx = FALSE,
  maxsteps = 2000,
  minlam = 0,
  rtol = 1e-07,
  btol = 1e-07,
  verbose = FALSE,
  object = NULL,
  ctol = 1e-10,
  cdtol = 1e-04,
  do.gc = F
)
}
\arguments{
\item{y}{numeric vector of data.}

\item{D}{penalty matrix.}

\item{approx}{If approx=TRUE, then the fused lasso path will be computed
without any coordinates leaving the path.}

\item{maxsteps}{maximum number of steps of the algorithms to run.}

\item{minlam}{minimum lambda of the algorithms to run}

\item{rtol}{Tolerance for solving linear system using sparsesvdsolve(), defaults to 1e-7.}

\item{btol}{Tolerance for leaving times, precision issue, defaults to 1e-10}

\item{ctol}{Tolerance for gmat&\%y ~= c; defaults to 1e-7}

\item{cdtol}{Tolerance for cdtol; defaults to 1e-4}

\item{do.gc}{internal garbage collection code}
}
\description{
hat{u}(lambda) =argmin_u |y - D^T u|_2^2 rm{s.t.} |u|_infty leq lambda
}
\details{
where D is m x n. Here there is no assumption on D, and we use a
fresh SVD at each iteration (computationally naive but stable).

Note: the df estimates at each lambda_k can be thought of as the df for all
solutions corresponding to lambda in (lambda_k,lambda_{k-1}), the open
interval to the \emph{right} of the current lambda_k.
}
